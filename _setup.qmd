
```{r setup}
#| echo: false
#| message: false
#| eval: true
# download/update the excel file with the spreadsheet ####

library(tidyverse)
library(dplyr)

#-------- getMetadata(erddap_id) --------------
# Get subset of metadata by column and erddap_id
# We could read directly from the spreadsheet on the Google Drive, but downloading the csv file ensures
# that everyone is using the same metadata.csv file, and it can easily be archived by ESR year

getMetadata <-function(erddap_id){
# get link from google drive
# 'https://docs.google.com/spreadsheets/d/1QlA_c8Km6SmkOke19nVpsE7gpw8RcY7zY69fnCeSIYo/edit?gid=727721099#gid=727721099'
#library(googledrive)
#if(1==1){
#file_id = '1QlA_c8Km6SmkOke19nVpsE7gpw8RcY7zY69fnCeSIYo'
#drive_download( as_id(file_id) , path = 'metadata.csv', overwrite = TRUE)
#}

  df = read.csv('metadata.csv')
  df_trimmed<- df %>% select(c('Component_Section', 'Subcomponent', 'ERDDAP_Dataset_ID', 'ERDDAP_query_value', 'Contact', 'Title', 'Institution', 'Source_Data', 'Additional_Calculations', 'region', 'latitude', 'longitude', 'latitude2', 'longitude2','Sampling_frequency','Figure_grouping','year_begin','year_end'))
  meta <- df_trimmed %>% filter(ERDDAP_Dataset_ID==erddap_id)
  meta <- meta[order(meta$Figure_grouping),]
  return(meta)
  }
  
  
#-------- getMultiMetadata(erddap_id) --------------
# Bind metadata for vector of erddap_id's

getMultiMetadata <-function(erddap_id){
  num_ind = length(erddap_id)
  metalist <- list()
  for (i in 1:num_ind){
    m <- getMetadata(erddap_id[i])
    metalist[[i]] <- m
    }
  meta <- do.call(rbind,metalist)
  }
  
# Functions to print out metadata for data sets organized in various ways

#----------one_id_multimeta(erddap_id) ------------
# Common case when there is one erddap_id but the dataset may have multiple indicators, each with it's own unique metadata
#Examples: ONI (one indicator), MarineHeatWaves (multiple indicators)
one_id_multimeta <-function(erddap_id){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)

  for (i in 1:num_ind){
    cat("<b>",meta$Title[i],"</b>\n\n",sep="")
    print_meta(meta,i)
    cat("\n")
    }
  }
  
#----------one_id_bylat(erddap_id) ------------
# One erddap_id but multiple indicators, each at a different latitude or latitude range
# Prints only latitude unless latitude2 is present, in which case print the range
# Assumes the metadata is the same for all latitudes
# Examples: SST and HCI
one_id_bylat <-function(erddap_id){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)
  cat("<p>* <b>Latitudes:</b>\n")

  for (i in 1:num_ind){
    lat2=""
    if(!is.na(meta$latitude2[i]))lat2=paste(" - ",meta$latitude2[i],sep="")
    cat("     + ",meta$latitude[i],lat2," N\n",sep="")
    }
    print_meta(meta,1)
    cat("</p>")
  }
  
#----------one_id_byquery(erddap_id,query_title) ------------
# One erddap_id but multiple indicators, list by query parameter (typically species)
# Example: Forage
one_id_byquery <-function(erddap_id,query_title){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)
  cat("<p>* <b>",query_title,":</b>\n",sep="")

  for (i in 1:num_ind){
    cat("     + ",meta$ERDDAP_query_value[i],"\n")
    }
    print_meta(meta,1)
    cat("</p>")
  }
   
#----------one_id_bytitle(erddap_id,query_title) ------------
# One erddap_id but multiple indicators, list by subset of title (typically species)
# Example: Commercial Fishery Revenue
one_id_bytitle <-function(erddap_id,query_title){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)
  cat("<p>* <b>",query_title,":</b>\n",sep="")

  for (i in 1:num_ind){
    cat("     + ",sub(".*; ","",meta$Title[i]),"\n")
    }
    print_meta(meta,1)
    cat("</p>")
  }
   
#----------one_id_by_title_query(erddap_id,title_phrase,query_title,latlon) ------------
# One erddap_id but multiple indicators, each with different erddap_query_parameter (commonly location or species)
# title_phrase: Sort indicators according to a phrase contained in its Title, asssumes metadata is the same for indicators sorted by each phrase
# query_title: Prints query parameters contained in each sorted set under the heading query_title
# latlon: true or false, if true print lat/lon after query (usually a location)
# Example: Dissolved Oxygen, Ocean Acidification with titles like: "Dissolved Oxygen at 150 m: CalCOFI 90.90"
one_id_by_title_query <-function(erddap_id,title_phrase,query_title,latlon){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)
  cat("<p>* <b>",query_title,":</b>\n",sep="")

  for (i in 1:num_ind){
    if(grepl(title_phrase,meta$Title[i])){
      #hack to make CalCOFI station locations prettier
      lat=""
      lon=""
      if(isTRUE(latlon)){
        if(!is.na(meta$latitude[i]))lat=paste(meta$latitude[i]," N, ",sep="")
        if(!is.na(meta$longitude[i]))lon=paste(meta$longitude[i]," E",sep="")
        }
      if(title_phrase == "CalCOFI"){
        spl1=strsplit(sub(".*at ", "", meta$Title[i])," ")[[1]]
        spl2=spl1[4]
        spl3=strsplit(spl2,"\\.")[[1]]
        cat("     + ",spl1[1],"m: Line ",spl3[1],", Station ",spl3[2]," (",lat,lon,")\n",sep="")
        }
      else{
        cat("     + ",meta$ERDDAP_query_value[i]," (",lat,lon,")\n",sep="")
       }
      cind=i
      }
    }
    print_meta(meta,cind)
   cat("</p>")
  }
  
#----------one_id_by_twotitle_query(erddap_id,title_phrase1,title_phrase2,query_title) ------------
# One erddap_id but multiple indicators, each with different erddap_query_parameter (commonly location or species)
# Sort indicators according to two phrases contained in its Title, asssumes metadata is the same for indicators sorted by each phrase
# Prints query parameters contained in each sorted set under the heading query_title
# title_prases are vectors
# future: generalize for any number of phrases (eliminate function one_id_by_title_query)
# Example: Dissolved Oxygen
one_id_by_twotitle_query <-function(erddap_id,title_phrase1,title_phrase2,query_title){
  meta=getMetadata(erddap_id)
  num_ind = nrow(meta)
  nphrase1=length(title_phrase1)
  nphrase2=length(title_phrase2)
  
  for(j in 1:nphrase1){
    for(k in 1:nphrase2){
      cat("<p>**",query_title,title_phrase2[k]," ",title_phrase1[j]," indicators:**\n\n",sep="")
      cat("* <b>",title_phrase1[j],"s:</b>\n",sep="")
        for (i in 1:num_ind){
          if(grepl(title_phrase2[k],meta$Title[i]) & grepl(title_phrase1[j],meta$Title[i])){
            cat("     + ",meta$region[i],"\n")
            cind=i
             }
           }
         print_meta(meta,cind)
         cat("</p>")
         }
       } 
  }
  
#----------multi_id_onemeta(erddap_id) ------------
# Multiple erddap_id's but each has the same metadata
# erddap_id is a vector
# Example: NPH and NPH_JF on same page
multi_id_onemeta <-function(erddap_id){
  meta <- getMultiMetadata(erddap_id)
  num_ind = nrow(meta)
  
  cat("<p>* <b>Indicators:</b>\n")
  for (i in 1:num_ind){
    cat("     + ",meta$Title[i],"\n")
    }
    print_meta(meta,2)
    cat("</p>")
 }

#-----------print_meta(meta,i)----------------
# Used by functions above that print metadata, used for all pages
# meta: list extracted by getMetadata()
# i: the list index number to print
print_meta <- function(meta,i){
    cat("* <b>Component Category: </b>", meta$Component_Section[i],"\n",sep="")
    if(!is.na(meta$year_begin)&&(!is.na(meta$year_end)))cat("* <b>Time Range: </b>",meta$year_begin[i]," - ",meta$year_end[i],"\n",sep="")
    cat("* <b>CCIEA Data Contact: </b>",meta$Contact[i],"\n",sep="")
    cat("* <b>Institution: </b>",meta$Institution[i],"\n",sep="")
    cat("* <b>Source Data: </b>",meta$Source_Data[i],"\n",sep="")
    if(meta$Additional_Calculations[i]!="")cat("* <b>Additional Calculations: </b>",meta$Additional_Calculations[i],"\n",sep="")
}
  
#-----------print_meta_about(meta,i)----------------
# Used by functions above that print metadata, used for all pages, this one just prints source, additional calculations and time range
# prints as second indent of list instead of first
# meta: list extracted by getMetadata()
# i: the list index number to print
# Example: Fishery Landings
print_meta_about <- function(meta,i){
  if(meta$Additional_Calculations[i]!="")cat("    + *About this indicator: * ",meta$Additional_Calculations[i],"\n")
    if(!is.na(meta$year_begin)&&(!is.na(meta$year_end)))cat("    + *Time Range: * ",meta$year_begin[i]," - ",meta$year_end[i],"\n",sep="")
    cat("    + *Source Data: *",meta$Source_Data[i],"\n\n",sep="")
  }
  
#-----------print_meta_about_remainder(meta,i)----------------
# Used by functions above that print metadata, used for all pages, this one just prints source, additional calculations and time range
# meta: list extracted by getMetadata()
# i: the list index number to print
# Example: Fishery Landings
print_meta_remainder <- function(meta,i){
    cat("**Component Category: **", meta$Component_Section[i],"\n\n",sep="")
    cat("**CCIEA Data Contact: **",meta$Contact[i],"\n\n",sep="")
    cat("**Institution: **",meta$Institution[i],"\n\n",sep="")
}
  
#-----------get_erddap_link(erddap_id)----------------
# print the ERDDAP link(s) for a given set of erddap_id(s)
get_erddap_link <-function(erddap_id){
  s=""
  if(length(erddap_id)>1)s="s"
  cat("**Indicator Download",s,": **\n\n",sep="")
  cat("ERDDAP&trade; link",s,": <br>",sep="")
  for(i in 1:length(erddap_id)){
    cat("<https://oceanview.pfeg.noaa.gov/erddap/tabledap/",erddap_id[i],".html> \n",sep="")
    }
  }
  
```

